# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

resources:
  repositories:
    - repository: Canvas
      type: github
      name: cveld/Canvas
      ref: refs/heads/feature/CanvasRef

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- checkout: self
- checkout: Canvas
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      ((Get-Content -path BlazorMandelbrotDeepzoom\BlazorMandelbrotDeepzoom\Client\BlazorMandelbrotDeepzoom.Client.csproj -Raw) -replace '..\..\..\..\..\BlazorExtensions\Canvas\src\Blazor.Extensions.Canvas\Blazor.Extensions.Canvas.csproj','..\..\src\Blazor.Extensions.Canvas\Blazor.Extensions.Canvas.csproj') | Set-Content -Path C:\ReplaceDemo.txt      

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
